;
; File generated by cc65 v 2.19 - N/A
;
	.fopt		compiler,"cc65 v 2.19 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_table
	.export		_head_index
	.export		_reset_head
	.export		_yield
	.export		_rectangle
	.export		_sprint_hex
	.export		_sleep
	.export		_init_flash
	.export		_kill_flash

.segment	"DATA"

_table:
	.word	$7F00
_head_index:
	.byte	$00

; ---------------------------------------------------------------
; void __near__ reset_head (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_reset_head: near

.segment	"CODE"

	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	bne     L0002
	sta     _head_index
L0002:	rts

.endproc

; ---------------------------------------------------------------
; void __near__ yield (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_yield: near

.segment	"CODE"

L0002:	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	bne     L0002
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ rectangle (char x, char w, char y, char h, char color)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_rectangle: near

.segment	"CODE"

	jsr     pusha
	jsr     _reset_head
	ldx     #$00
	lda     _head_index
	jsr     incax1
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$04
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax2
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$03
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax3
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax4
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	dey
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax5
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax6
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     _head_index
	lda     #$01
	sta     (ptr1),y
	lda     #$06
	clc
	adc     _head_index
	sta     _head_index
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; void __near__ sprint_hex (int value)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sprint_hex: near

.segment	"CODE"

	jsr     pushax
	jsr     _reset_head
	ldx     #$00
	lda     _head_index
	jsr     incax1
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax2
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	jsr     ldax0sp
	txa
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax3
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     _head_index
	lda     #$02
	sta     (ptr1),y
	lda     #$03
	clc
	adc     _head_index
	sta     _head_index
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ sleep (int periods)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_sleep: near

.segment	"CODE"

	jsr     pushax
	jsr     _reset_head
	ldx     #$00
	lda     _head_index
	jsr     incax1
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax2
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	jsr     ldax0sp
	txa
	ldy     #$00
	sta     (ptr1),y
	ldx     #$00
	lda     _head_index
	jsr     incax3
	clc
	adc     _table
	sta     ptr1
	txa
	adc     _table+1
	sta     ptr1+1
	lda     #$00
	tay
	sta     (ptr1),y
	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     _head_index
	lda     #$03
	sta     (ptr1),y
	clc
	adc     _head_index
	sta     _head_index
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ init_flash (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_init_flash: near

.segment	"CODE"

	jsr     _reset_head
	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     _head_index
	lda     #$04
	sta     (ptr1),y
	inc     _head_index
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ kill_flash (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_kill_flash: near

.segment	"CODE"

	jsr     _reset_head
	lda     _table+1
	sta     ptr1+1
	lda     _table
	sta     ptr1
	ldy     _head_index
	lda     #$05
	sta     (ptr1),y
	inc     _head_index
	rts

.endproc

