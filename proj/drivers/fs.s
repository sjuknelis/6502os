;
; File generated by cc65 v 2.19 - N/A
;
	.fopt		compiler,"cc65 v 2.19 - N/A"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.export		_loaded_page
	.export		_readdir_ptr
	.export		_file_ptrs
	.export		_file_index
	.export		_memcpy
	.export		_readdir
	.export		_flip_bytes
	.export		_open
	.export		_read
	.export		_fstest

.segment	"DATA"

_loaded_page:
	.byte	$00
_readdir_ptr:
	.word	$6000

.segment	"BSS"

_file_ptrs:
	.res	16,$00
_file_index:
	.res	1,$00

; ---------------------------------------------------------------
; void __near__ memcpy (char *dest, char *src, int bytes)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_memcpy: near

.segment	"CODE"

	jsr     pushax
	jsr     push0
	jmp     L0004
L0002:	jsr     ldax0sp
	clc
	ldy     #$06
	adc     (sp),y
	sta     sreg
	txa
	iny
	adc     (sp),y
	sta     sreg+1
	jsr     ldax0sp
	clc
	ldy     #$04
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	sta     (sreg),y
	ldx     #$00
	lda     #$01
	jsr     addeq0sp
L0004:	jsr     ldax0sp
	ldy     #$02
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L0005
	eor     #$80
L0005:	bmi     L0002
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; struct $anon-struct-0001 *__near__ readdir (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_readdir: near

.segment	"CODE"

	jsr     decsp2
	lda     _loaded_page
	beq     L0007
	ldx     #$60
	lda     #$00
	sta     _readdir_ptr
	stx     _readdir_ptr+1
	jmp     L0007
L0003:	lda     #$20
	clc
	adc     _readdir_ptr
	sta     _readdir_ptr
	bcc     L0006
	inc     _readdir_ptr+1
L0006:	lda     _readdir_ptr
	cmp     #$00
	lda     _readdir_ptr+1
	sbc     #$70
	bcc     L0007
	ldx     #$00
	txa
	jmp     L0001
L0007:	lda     _readdir_ptr+1
	sta     ptr1+1
	lda     _readdir_ptr
	sta     ptr1
	ldy     #$00
	lda     (ptr1),y
	beq     L0003
	lda     _readdir_ptr
	ldx     _readdir_ptr+1
	jsr     stax0sp
	lda     #$20
	clc
	adc     _readdir_ptr
	sta     _readdir_ptr
	bcc     L0008
	inc     _readdir_ptr+1
L0008:	jsr     ldax0sp
L0001:	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; int __near__ flip_bytes (int value)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flip_bytes: near

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	txa
	pha
	ldy     #$00
	lda     (sp),y
	tax
	pla
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ open (struct $anon-struct-0001 *entry)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_open: near

.segment	"CODE"

	jsr     pushax
	jsr     ldax0sp
	ldy     #$10
	jsr     incaxy
	jsr     ldaxi
	jsr     _flip_bytes
	sta     $8008
	lda     #$00
	sta     _file_index
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ read (char *dest, int bytes)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_read: near

.segment	"CODE"

	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldx     #$60
	clc
	lda     _file_index
	bcc     L0002
	inx
L0002:	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     _memcpy
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ fstest (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_fstest: near

.segment	"CODE"

	jsr     _readdir
	jsr     pushax
	jsr     ldax0sp
	jsr     _open
	ldx     #$30
	lda     #$00
	jsr     pushax
	ldx     #$02
	jsr     _read
	jmp     incsp2

.endproc

